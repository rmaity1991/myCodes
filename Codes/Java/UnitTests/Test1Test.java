// Generated by Selenium IDE

package Java.UnitTests;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class Test1Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }

  @Test
  public void test1() {
    // Test name: Test1
    // Step # | name | target | value
    // 1 | open | / |
    driver.get("https://www.amazon.in/");
    // 2 | setWindowSize | 1552x880 |
    driver.manage().window().setSize(new Dimension(1552, 880));
    // 3 | click | linkText=Computers |
    driver.findElement(By.linkText("Computers")).click();
    // 4 | click | css=.bxc-grid__column--6-of-12:nth-child(1) img |
    driver.findElement(By.cssSelector(".bxc-grid__column--6-of-12:nth-child(1) img")).click();
    // 5 | mouseOver | css=#a-autoid-5 .a-button-input |
    {
      WebElement element = driver.findElement(By.cssSelector("#a-autoid-5 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 6 | mouseOut | css=#a-autoid-5 .a-button-input |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 7 | mouseOver | css=#a-autoid-6 .a-button-input |
    {
      WebElement element = driver.findElement(By.cssSelector("#a-autoid-6 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 8 | mouseOut | css=#a-autoid-6 .a-button-input |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 9 | mouseOver | css=#a-autoid-7 .a-button-input |
    {
      WebElement element = driver.findElement(By.cssSelector("#a-autoid-7 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 10 | mouseOut | css=#a-autoid-7 .a-button-input |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 11 | mouseOver | css=#a-autoid-8 .a-button-input |
    {
      WebElement element = driver.findElement(By.cssSelector("#a-autoid-8 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 12 | mouseOut | css=#a-autoid-8 .a-button-input |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 13 | mouseOver | css=#a-autoid-9 .a-button-input |
    {
      WebElement element = driver.findElement(By.cssSelector("#a-autoid-9 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 14 | mouseOut | css=#a-autoid-9 .a-button-input |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 15 | runScript | window.scrollTo(0,700) |
    js.executeScript("window.scrollTo(0,700)");
    // 16 | runScript | window.scrollTo(0,2200) |
    js.executeScript("window.scrollTo(0,2200)");
    // 17 | runScript | window.scrollTo(0,2331.199951171875) |
    js.executeScript("window.scrollTo(0,2331.199951171875)");
    // 18 | click | css=#sp_detail_B09N7VDBJL
    // .sponsored-products-truncator-truncated |
    vars.put("window_handles", driver.getWindowHandles());
    // 19 | storeWindowHandle | root |
    driver.findElement(By.cssSelector("#sp_detail_B09N7VDBJL .sponsored-products-truncator-truncated")).click();
    // 20 | selectWindow | handle=${win1990} |
    vars.put("win1990", waitForWindow(2000));
    // 21 | selectWindow | handle=${root} |
    vars.put("root", driver.getWindowHandle());
    // 22 | selectWindow | handle=${win1990} |
    driver.switchTo().window(vars.get("win1990").toString());
    // 23 | selectFrame | index=0 |
    driver.switchTo().window(vars.get("root").toString());
    // 24 | mouseOver | css=a |
    driver.switchTo().window(vars.get("win1990").toString());
    // 25 | mouseOut | css=a |
    driver.switchTo().frame(0);
    // 26 | selectFrame | relative=parent |
    {
      WebElement element = driver.findElement(By.cssSelector("a"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 27 | mouseOver | linkText=TV & Home Entertainment |
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.switchTo().defaultContent();
    {
      WebElement element = driver.findElement(By.linkText("TV & Home Entertainment"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
  }
}
