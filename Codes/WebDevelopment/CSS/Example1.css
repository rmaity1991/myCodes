/*
A CSS comprises of style rules that are interpreted by the browser and then applied to the corresponding elements in 
your document. A style rule is made of three parts −

Selector − A selector is an HTML tag at which a style will be applied. This could be any tag like <h1> or <table> etc.

Property − A property is a type of attribute of HTML tag. Put simply, all the HTML attributes are converted into CSS 
properties. They could be color, border etc.

Value − Values are assigned to properties. For example, color property can have value either red or #F1F1F1 etc.
The Type Selectors
*/


/* 
This is the same selector we have seen above. Again, one more example to give a color to all level 1 headings.
*/


h1 {
    color: #36CFFF; 
 }

 /*
 The Universal Selectors
Rather than selecting elements of a specific type, the universal selector quite simply matches the name of any 
element type
*/

* { 
    color: #000000; 
 }

 /*
 The Descendant Selectors
Suppose you want to apply a style rule to a particular element only when it lies inside a particular element. 
As given in the following example, style rule will apply to <em> element only when it lies inside <ul> tag.
*/
ul em {
    color: #000000; 
 }

 /*
 The Class Selectors
You can define style rules based on the class attribute of the elements. All the elements having that class 
will be formatted according to the defined rule.
*/
h1.black {
    color: #000000; 
 }
 /*
 The ID Selectors
You can define style rules based on the id attribute of the elements. All the elements having that id will be 
formatted according to the defined rule.
*/
#black {
    color: #000000; 
 }

 h1#black {
    color: #000000; 
 }

 /*
 The Child Selectors
You have seen the descendant selectors. There is one more type of selector, which is very similar to descendants 
but have different functionality.
This rule will render all the paragraphs in black if they are direct child of <body> element. Other paragraphs 
put inside other elements like <div> or <td> would not have any effect of this rule.
*/
body > p {
    color: #000000; 
 }
 /*
 Multiple Style Rules
You may need to define multiple style rules for a single element. You can define these rules to combine multiple 
properties and corresponding values into a single block as defined in the following example
*/
h1 {
    color: #36C;
    font-weight: normal;
    letter-spacing: .4em;
    margin-bottom: 1em;
    text-transform: lowercase;
 }

 /*
 Grouping Selectors
You can apply a style to many selectors if you like. Just separate the selectors with a comma, as given in the 
following example
*/
h1, h2, h3 {
    color: #36C;
    font-weight: normal;
    letter-spacing: .4em;
    margin-bottom: 1em;
    text-transform: lowercase;
 }

 /*
 CSS Rules Overriding
We have discussed four ways to include style sheet rules in a an HTML document. Here is the rule to 
override any Style Sheet Rule.

Any inline style sheet takes highest priority. So, it will override any rule defined in 
<style>...</style> tags or rules defined in any external style sheet file.

Any rule defined in <style>...</style> tags will override rules defined in any external 
style sheet file.

Any rule defined in external style sheet file takes lowest priority, and rules defined in this file 
will be applied only when above two rules are not applicable.
*/

p {font-size: 16pt; line-height: 125%;}
div {margin-bottom: 2cm;}
p {letter-spacing: 7em;}
p {font-size: 24pt; line-height: 3ex;}
p {word-spacing: .15in;}
p {word-spacing: 15mm;}
p {font-size: 20pc;}
body {font-size: 18pt;}
p {padding: 25px;}


